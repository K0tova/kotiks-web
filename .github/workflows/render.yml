name: Render backend preview
on:
  pull_request:
    branches: [ main ]

jobs:
  render:
    runs-on: ubuntu-latest
    env:
      RENDER_HOOK_URL:  ${{ secrets.RENDER_HOOK_URL }}
      RENDER_API_KEY:   ${{ secrets.RENDER_API_KEY }}

    steps:
      - name: Install jq
        run: sudo apt-get update -y && sudo apt-get install -y jq

      - name: Trigger preview deploy & capture ID
        id: deploy
        run: |
          echo "Calling deploy hook…"
          response=$(curl -s -X POST "$RENDER_HOOK_URL")
          echo "Response: $response"
          DEPLOY_ID=$(echo "$response" | jq -r '.deploy.id')
          if [[ "$DEPLOY_ID" == "null" || -z "$DEPLOY_ID" ]]; then
            echo "Failed to trigger deploy or parse deploy.id"; exit 1
          fi
          echo "deploy_id=$DEPLOY_ID" >> $GITHUB_OUTPUT

      - name: Wait until deploy is live
        run: |
          DEPLOY_ID='${{ steps.deploy.outputs.deploy_id }}'
          echo "Polling deploy $DEPLOY_ID …"
          for i in {1..40}; do     # 10-min timeout
            data=$(curl -s \
              -H "Accept: application/json" \
              -H "Authorization: Bearer $RENDER_API_KEY" \
              "https://api.render.com/v1/deploys/$DEPLOY_ID")

            state=$(echo "$data" | jq -r '.status')
            echo "[$(date)] status: $state"

            case "$state" in
              live)   exit 0 ;;
              failed) exit 1 ;;
              *)      sleep 15 ;;
            esac
          done
          echo "Timed out waiting for deploy"; exit 1
